version: 2
jobs:
  build:
    # Test mocknet
    docker:
      - image: qrledger/qrl-docker-ci:xenial
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: pip3 install -U -r requirements.txt
      - run: apt install -y python3-venv
      - run:
          name: Mocknet Tests
          command: pytest tests/python/mocknet
      - run: pip3 install -U -r requirements.txt
      - run:
          name: Basic Tests
          command: pytest tests/python/basic

  tests_xenial:
    # Run all tests in xenial
    docker:
      - image: qrledger/qrl-docker-ci:xenial
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: apt install -y python3-venv
      - run: pip install -U -r requirements.txt
      - run:
          name: Mocknet Tests
          command: pytest tests/python/mocknet
      - run: pip3 install -U -r requirements.txt
      - run:
          name: Basic Tests
          command: pytest tests/python/basic
      - run:
          name: Fork recovery Tests
          command: pytest tests/python/fork_recovery

  tests_bionic:
    # Run all tests in bionic
    docker:
      - image: qrledger/qrl-docker-ci:bionic
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: apt install -y python3-venv
      - run: pip install -U -r requirements.txt
      - run:
          name: Mocknet Tests
          command: pytest tests/python/mocknet
      - run: pip3 install -U -r requirements.txt
      - run:
          name: Basic Tests
          command: pytest tests/python/basic
      - run:
          name: Fork recovery Tests
          command: pytest tests/python/fork_recovery

  tests_fuzzing:
    # Run all tests in xenial
    docker:
      - image: qrledger/qrl-docker-ci:xenial
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: apt-get -y remove python3-dev python3-pip python3-venv --purge
      - run: add-apt-repository ppa:deadsnakes/ppa -y
      - run: apt-get update
      - run: apt-get -y install python3.6 python3.6-dev python3-pip python3.6-venv
      - run: update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
      - run: python3 -m pip install
      - run: python3 -m pip install -U pip setuptools
      - run: git submodule update --init --recursive --remote
      - run: python3 -m pip install -U -r requirements.txt
      - run: python3 -m pip install git+https://github.com/CurataEng/hypothesis-protobuf.git
      - run:
          name: Fuzzing Tests
          command: pytest tests/python/fuzzing

  tests_fastnet_long:
    docker:
      - image: qrledger/qrl-docker-ci:xenial
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: apt-get -y remove python3-dev python3-pip python3-venv --purge
      - run: add-apt-repository ppa:deadsnakes/ppa -y
      - run: apt-get update
      - run: apt-get -y install python3.6 python3.6-dev python3-pip python3.6-venv
      - run: update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
      - run: python3 -m pip install
      - run: python3 -m pip install -U pip setuptools
      - run: git submodule update --init --recursive --remote
      - run: python3 -m pip install -U -r requirements.txt
      - run: python3 -m pip install git+https://github.com/CurataEng/hypothesis-protobuf.git
      - run:
          name: Fast block time ( 1 block/sec) - No errors detected for 10 mins
          command: pytest tests/python/fastnet_long

#  tests_js:
    # Run javascript tests
#    docker:
#      - image: qrledger/qrl-docker-ci:xenial
#    environment:
#      PYTHONPATH: /root/project
#    steps:
#      - checkout
#      - run: apt install -y python3-venv
#      - run: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
#      - run: apt-get install -y nodejs
#      - run: npm -v
#      - run:
#          command: ./mocknet/MockNet.py
#          background: true
#      - run: apt install -y netcat
#      - run: while ! echo exit | nc 127.0.0.1 10002; do sleep 10; done
#      - run: cd tests/js && npm install && npm rebuild && npm test

  tests_webstack:
    # Run full webstack integration tests (wallet and explorer)
    machine: true
    pre:
      - cat /etc/*release
      - pyenv global 2.7.11 3.5.1
    steps:
      - checkout
      - run: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
      - run: sudo apt update -y
      - run: sudo apt install -y locales default-jre default-jdk python3 python3-pip netcat cpulimit bsdtar nodejs
      - run: sudo wget https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz && tar xzvf cmake-3.7.2-Linux-x86_64.tar.gz
      - run: sudo echo "export PATH=$PWD/cmake-3.7.2-Linux-x86_64/bin:$PATH" >> $BASH_ENV
      - run: sudo locale-gen en_US.UTF-8
      - run: sudo localedef -i en_US -f UTF-8 en_US.UTF-8
      - run: sudo curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      - run: sudo dpkg -i google-chrome.deb
      - run: sudo mv /bin/tar /bin/tar.gnu
      - run: sudo ln -s /usr/bin/bsdtar /bin/tar
      - run: sudo curl https://install.meteor.com/ | sh
      - run: sudo rm /bin/tar
      - run: sudo mv /bin/tar.gnu /bin/tar
      - run: sudo npm -v
      - run: npm install -g electrify-qrl --unsafe-perm --allow-root
      - run: npm install -g chimp@0.51.1
      - run: npm install -g selenium-standalone
      - run: pip3 install -U setuptools
      - run: pip3 install -U -r requirements.txt
      - run: cd tests && git clone https://github.com/theQRL/qrl-wallet.git
      - run: cd tests && git clone https://github.com/theQRL/block-explorer.git
      - run: cd tests/qrl-wallet && meteor npm install --unsafe-perm --allow-root
      - run: cd tests/block-explorer && meteor npm install --unsafe-perm --allow-root
      - run:
          command: sudo cd tests/qrl-wallet && meteor --allow-superuser --settings mocknet.json
          background: true
      - run: sudo until curl --max-time 300 http://localhost:3000/; do sleep 1; done
      - run:
          command: sudo cd tests/block-explorer && meteor --allow-superuser --settings mocknet.json --port 3003
          background: true
      - run: sudo until curl --max-time 300 http://localhost:3003/; do sleep 1; done
      - run:
          command: sudo nice ./mocknet/MockNet.py enableMining
          background: true
      - run: sudo while ! echo exit | nc 127.0.0.1 10002; do sleep 10; done
      - run: sudo cd tests/chimp && chimp --ddp=http://localhost:3000 --browser=chrome --path=tests

  debug:
    # debugging job - this can be customize locally but it wont run in circleci
    # to run this, execute circleci build --job debug
    docker:
      - image: qrledger/qrl-docker-ci:xenial
    environment:
      PYTHONPATH: /root/project
    steps:
      - checkout
      - run: pip install -U -r requirements.txt
      - run: apt install -y python3-venv
      - run:
          name: Debugging -  Adjust accordingly
          command: pytest tests/python/fastnet

workflows:
  version: 2
  build_all:
    jobs:
      - build
      - tests_xenial
      - tests_bionic
     # - tests_js
     # - tests_webstack
      - tests_fuzzing
      - tests_fastnet_long
